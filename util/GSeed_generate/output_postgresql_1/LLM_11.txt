CREATE TABLE test_table (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    age INTEGER CHECK (age >= 0),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    data JSONB,
    array_col INTEGER[] NOT NULL
);

INSERT INTO test_table (name, age, array_col)
VALUES ('Alice', 30, '{1,2,3}'),
       ('Bob', 45, '{4,5,6}'),
       ('Charlie', 67, '{7,8,9}');

SELECT 
    id,
    name,
    age,
    created_at,
    data,
    array_col,
    CONCAT(name, ' is ', age) AS full_info
FROM test_table
WHERE age > 30
ORDER BY age DESC;

UPDATE test_table
SET age = age + 1, 
    name = UPPER(name)
WHERE id IN (SELECT id FROM test_table WHERE age % 2 = 0);

DELETE FROM test_table
WHERE id NOT IN (
    SELECT id 
    FROM (
        SELECT id, RANK() OVER (ORDER BY age) as rank_order 
        FROM test_table
    ) t 
    WHERE t.rank_order <= 2
);

SELECT 
    id,
    name,
    age,
    created_at AT TIME ZONE 'UTC' AS utc_time,
    array_col[1] AS first_element,
    data ->> 'key' AS json_value
FROM test_table
WHERE age > (
    SELECT AVG(age) FROM test_table
)
LIMIT 2 OFFSET 1;

SELECT 
    id,
    name,
    age,
    created_at,
    array_col,
    data
FROM test_table
WHERE name LIKE '%a%' 
AND EXISTS (
    SELECT 1 FROM test_table t2 WHERE t2.id = test_table.id AND age > 30
)
GROUP BY id, name, age, created_at, array_col, data
HAVING COUNT(*) > 1;