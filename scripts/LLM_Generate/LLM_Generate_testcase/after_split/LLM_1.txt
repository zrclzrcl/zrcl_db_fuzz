-- 创建一个复杂的表，包含生成列、默认值和检查约束
CREATE TABLE t1(
    c0 INTEGER PRIMARY KEY,
    c1 TEXT DEFAULT 'default',
    c2 REAL GENERATED ALWAYS AS (c0 * 1.5) VIRTUAL,
    c3 BLOB,
    c4 INTEGER CHECK(c4 > 0)
);

-- 创建带唯一约束和外键的表
CREATE TABLE t2(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    t1_id INTEGER NOT NULL,
    c0 TEXT UNIQUE,
    FOREIGN KEY(t1_id) REFERENCES t1(c0) ON DELETE CASCADE
);

-- 创建一个表和索引
CREATE TABLE t3(
    c0 INTEGER,
    c1 TEXT,
    c2 REAL,
    UNIQUE(c0, c1)
);
CREATE INDEX idx_c2 ON t3(c2);

-- 插入多行数据
INSERT INTO t1 (c0, c4) VALUES (1, 10), (2, 20);
INSERT INTO t2 (t1_id, c0) VALUES (1, 'unique_val'), (2, 'another_val');
INSERT INTO t3 (c0, c1, c2) VALUES (1, 'text1', 0.1), (2, 'text2', 0.2);

-- 使用更新和删除
UPDATE t1 SET c1 = 'updated_value' WHERE c0 = 1;
DELETE FROM t2 WHERE c0 = 'unique_val';

-- 测试复杂查询
SELECT t1.c0, t2.c0 FROM t1 JOIN t2 ON t1.c0 = t2.t1_id WHERE t1.c4 > 15;

-- 事务操作
BEGIN TRANSACTION;
INSERT INTO t1 (c0, c4) VALUES (3, 30);
ROLLBACK;

-- 创建触发器
CREATE TRIGGER trg_after_insert_t1
AFTER INSERT ON t1
BEGIN
    UPDATE t1 SET c1 = 'triggered' WHERE c0 = NEW.c0;
END;

-- 测试窗口函数
SELECT c0, ROW_NUMBER() OVER (ORDER BY c0) AS row_num FROM t3;

-- 测试递归查询
WITH RECURSIVE cte_recursive(n) AS (
    SELECT 1
    UNION ALL
    SELECT n + 1 FROM cte_recursive WHERE n < 10
)
SELECT * FROM cte_recursive;

-- 删除触发器
DROP TRIGGER trg_after_insert_t1;

-- 删除表
DROP TABLE t3;
