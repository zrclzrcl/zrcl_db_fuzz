-- 创建一个表，包含生成列、多列主键和外键约束
CREATE TABLE t1(
    c0 INTEGER PRIMARY KEY AUTOINCREMENT,
    c1 TEXT NOT NULL UNIQUE,
    c2 AS(c0 + 1) STORED,
    c3 REAL DEFAULT 3.14 CHECK(c3 > 0),
    c4 TEXT REFERENCES t1(c1) ON DELETE SET NULL
);

-- 创建虚拟表，使用 FTS5 测试全文索引功能
CREATE VIRTUAL TABLE vt1 USING fts5(c1, c2, c3);

-- 插入数据到表中
INSERT INTO t1(c1, c3) VALUES 
    ('row1', 4.2), 
    ('row2', NULL), 
    ('row3', 5.6);

-- 测试虚拟表中的全文检索
INSERT INTO vt1(c1, c2, c3) VALUES 
    ('text1', 'additional', 'example'), 
    ('text2', 'fts', 'testing');

-- 创建复杂索引
CREATE INDEX idx_t1 ON t1(
    c3 DESC, 
    CASE c1 WHEN 'row1' THEN 1 ELSE 0 END
);

-- 设置数据库属性并验证外键约束
PRAGMA foreign_keys = ON;
PRAGMA integrity_check;

-- 执行数据分析
ANALYZE;

-- 测试复杂查询，包括窗口函数和条件表达式
SELECT 
    c1, 
    c3, 
    RANK() OVER (ORDER BY c3) AS rank_val,
    CASE WHEN c3 > 4 THEN 'High' ELSE 'Low' END AS category
FROM t1;

-- 更新表中的数据以触发生成列和外键约束
UPDATE t1 SET c3 = c3 * 2 WHERE c1 = 'row2';

-- 删除部分数据并验证外键的行为
DELETE FROM t1 WHERE c1 = 'row3';

-- 创建触发器，测试事件响应
CREATE TRIGGER trg_insert_t1
AFTER INSERT ON t1
BEGIN
    INSERT INTO t1(c1, c3) VALUES ('triggered_row', 1.23);
END;

-- 创建新表，测试递归查询和多表操作
CREATE TABLE t2(
    id INTEGER PRIMARY KEY,
    t1_id INTEGER NOT NULL REFERENCES t1(c0),
    description TEXT CHECK(length(description) > 3)
);

-- 插入数据到多表
INSERT INTO t2(t1_id, description) VALUES 
    (1, 'Linked Data'), 
    (2, 'Extra Info');

-- 测试递归查询
WITH RECURSIVE cte(n) AS (
    SELECT 1
    UNION ALL
    SELECT n + 1 FROM cte WHERE n < 3
)
SELECT * FROM cte;

-- 联合查询，测试多表操作
SELECT t1.c1, t2.description 
FROM t1 
JOIN t2 ON t1.c0 = t2.t1_id;

-- 测试事务管理
BEGIN TRANSACTION;
INSERT INTO t1(c1, c3) VALUES ('temp_row', 3.3);
ROLLBACK;

-- 删除触发器
DROP TRIGGER trg_insert_t1;

-- 删除虚拟表和索引
DROP INDEX idx_t1;
DROP TABLE vt1;
