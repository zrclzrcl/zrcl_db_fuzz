CREATE TABLE test_table (
    id SERIAL PRIMARY KEY,
    text_column TEXT,
    int_column INT,
    timestamp_column TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO test_table (text_column, int_column) VALUES ('test', 1);
INSERT INTO test_table (text_column, int_column) VALUES ('long_text', repeat('a', 1024));
INSERT INTO test_table (text_column, int_column) VALUES (NULL, NULL);
UPDATE test_table SET text_column = 'updated' WHERE id = 1;
DELETE FROM test_table WHERE id = 3;

SELECT * FROM test_table;
SELECT text_column, char_length(text_column) AS length FROM test_table;

WITH cte AS (
    SELECT id, text_column FROM test_table
)
SELECT * FROM cte;

ALTER TABLE test_table ADD COLUMN bool_column BOOLEAN DEFAULT FALSE;
UPDATE test_table SET bool_column = TRUE WHERE id <= 2;

BEGIN;
INSERT INTO test_table (text_column, int_column) VALUES ('transaction_test', 4);
SAVEPOINT sp1;
DELETE FROM test_table WHERE id = 4;
ROLLBACK TO sp1;
COMMIT;

CREATE INDEX idx_text ON test_table(text_column);

SELECT id, text_column, ROW_NUMBER() OVER (ORDER BY id) AS row_num
FROM test_table;

CREATE TRIGGER update_timestamp BEFORE UPDATE ON test_table
FOR EACH ROW EXECUTE PROCEDURE pg_sleep(0.5);

DROP TABLE test_table;