-- Create departments table with serial primary key and name not null
CREATE TABLE departments (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL
);

-- Index on department name for faster lookups
CREATE INDEX idx_department_name ON departments(name);

-- Create employees table with various fields and foreign key to departments
CREATE TABLE employees (
    id SERIAL PRIMARY KEY,
    first_name TEXT,
    last_name TEXT,
    salary NUMERIC(8, 2),
    hire_date DATE,
    department_id INT REFERENCES departments(id) ON DELETE SET NULL
);

-- Index on employee salary for optimized queries
CREATE INDEX idx_employee_salary ON employees(salary);

-- Create projects table with UUID as primary key and references to employees and departments
CREATE TABLE projects (
    project_id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    name TEXT NOT NULL,
    start_date DATE,
    end_date DATE,
    employee_id INT REFERENCES employees(id),
    department_id INT REFERENCES departments(id)
);

-- Add a unique email column to employees using ALTER TABLE
ALTER TABLE employees ADD COLUMN email TEXT UNIQUE;

-- Insert sample data into departments
INSERT INTO departments(name) VALUES ('Engineering'), ('Sales'), ('HR');

-- Insert sample data into employees, including NULL for first_name
INSERT INTO employees(first_name, last_name, hire_date)
VALUES ('John', 'Doe', '2023-01-01'),
       ('Jane', 'Smith', '2023-02-01'),
       (NULL, 'Anonymous', '2023-03-01');

-- Insert sample projects
INSERT INTO projects(name, start_date)
VALUES ('Project Alpha', '2024-01-01'),
       ('Project Beta', '2024-02-01');

-- Update salary for employee with id 1
UPDATE employees SET salary = 50000.00 WHERE id = 1;

-- Update end_date for all projects to be three months after start_date
UPDATE projects SET end_date = start_date + interval '3 months';

-- Delete the HR department and observe foreign key behavior
DELETE FROM departments WHERE name = 'HR';

-- Use CTE to join employees with their projects
WITH employee_projects AS (
    SELECT e.first_name, e.last_name, p.name as project_name
    FROM employees e
    LEFT JOIN projects p ON e.id = p.employee_id
)
SELECT * FROM employee_projects;

-- Grant select permission on departments table to public
GRANT SELECT ON departments TO public;