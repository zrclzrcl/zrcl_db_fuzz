CREATE TABLE test_fuzz (
    id SERIAL PRIMARY KEY,
    text_col TEXT,
    int_col INTEGER,
    numeric_col NUMERIC(10, 2),
    date_col DATE,
    bool_col BOOLEAN,
    point_col POINT
);

INSERT INTO test_fuzz (text_col, int_col, numeric_col, date_col, bool_col, point_col)
VALUES 
('test', 42, 100.5, '2023-10-01', TRUE, '(10,20)'),
('', NULL, -9999.99, '1970-01-01', FALSE, '(0,0)'),
('boundary', 2147483647, 9999.99, '9999-12-31', TRUE, '(-1,-1)');

CREATE INDEX gist_index ON test_fuzz USING GIST (point_col);

CREATE INDEX btree_index ON test_fuzz (int_col);

EXPLAIN SELECT * FROM test_fuzz WHERE point_col && '(50,50),(60,60)'::box;

ALTER TABLE test_fuzz RENAME COLUMN text_col TO new_text_col;

ALTER TABLE test_fuzz ALTER COLUMN int_col TYPE BIGINT;

CREATE UNIQUE INDEX unique_index ON test_fuzz (new_text_col);

CREATE OR REPLACE FUNCTION trigger_func()
RETURNS TRIGGER AS $$
BEGIN
    RAISE NOTICE 'Trigger activated';
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER test_trigger
BEFORE INSERT ON test_fuzz
FOR EACH ROW EXECUTE PROCEDURE trigger_func();

UPDATE test_fuzz SET new_text_col = 'updated' WHERE id = 1;

DELETE FROM test_fuzz WHERE int_col > 100;

\d+ test_fuzz

VACUUM ANALYZE test_fuzz;

DROP TABLE test_fuzz;