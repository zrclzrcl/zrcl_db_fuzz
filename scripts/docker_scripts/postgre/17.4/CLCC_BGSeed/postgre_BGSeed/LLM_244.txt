-- Initial seed for PostgreSQL database fuzz testing
CREATE TABLE test_table (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status BOOLEAN DEFAULT FALSE
);

INSERT INTO test_table (name, status) VALUES 
('Test1', TRUE),
('Test2', FALSE),
('Test3', TRUE);

CREATE INDEX idx_test_name ON test_table(name);

ALTER TABLE test_table ADD CONSTRAINT unique_name UNIQUE (name);

CREATE TABLE related_table (
    id SERIAL PRIMARY KEY,
    test_id INTEGER REFERENCES test_table(id),
    value TEXT
);

INSERT INTO related_table (test_id, value) VALUES 
(1, 'Value1'),
(2, 'Value2');

UPDATE test_table SET status = NOT status WHERE id IN (SELECT id FROM test_table WHERE status = FALSE);

DELETE FROM related_table WHERE test_id NOT IN (SELECT id FROM test_table);

BEGIN;
    INSERT INTO test_table (name, status) VALUES ('TxTest', TRUE);
    SAVEPOINT sp1;
        INSERT INTO related_table (test_id, value) VALUES (currval('test_table_id_seq'), 'TxValue');
    RELEASE SAVEPOINT sp1;
COMMIT;

CREATE VIEW test_view AS SELECT t.name, r.value FROM test_table t LEFT JOIN related_table r ON t.id = r.test_id;

WITH RECURSIVE cte_test AS (
    SELECT 1 as n
    UNION ALL
    SELECT n + 1 FROM cte_test WHERE n < 5
)
SELECT * FROM cte_test;

INSERT INTO test_table (name, status) SELECT 'CteTest', TRUE WHERE NOT EXISTS (SELECT 1 FROM test_table WHERE name = 'CteTest');