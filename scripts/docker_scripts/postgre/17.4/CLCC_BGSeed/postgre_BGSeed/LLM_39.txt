-- Create a table with various data types and constraints
CREATE TABLE test_table (
    id SERIAL PRIMARY KEY,
    text_field TEXT NOT NULL,
    int_field INT UNIQUE,
    bool_field BOOLEAN DEFAULT FALSE,
    ts_field TIMESTAMP WITH TIME ZONE
);

-- Create an index on the text field for faster searches
CREATE INDEX idx_text ON test_table (text_field);

-- Insert sample data into the table
INSERT INTO test_table (text_field, int_field, bool_field, ts_field)
VALUES ('test string', 123, TRUE, CURRENT_TIMESTAMP),
       ('another test', 456, FALSE, '2023-01-01 12:00:00+00');

-- Create a function that returns a boolean
CREATE FUNCTION check_value(val INT) RETURNS BOOLEAN AS $$
BEGIN
    RETURN val > 0;
END;
$$ LANGUAGE plpgsql;

-- Create a trigger function
CREATE FUNCTION update_timestamp() RETURNS TRIGGER AS $$
BEGIN
    NEW.ts_field = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create a trigger that updates the timestamp on insert
CREATE TRIGGER trig_update_ts BEFORE INSERT ON test_table
FOR EACH ROW EXECUTE PROCEDURE update_timestamp();

-- Create an index using GIN for full-text search capabilities
CREATE INDEX idx_fts ON test_table USING GIN (to_tsvector('english', text_field));

-- Enable pg_trgm extension to support text similarity functions
CREATE EXTENSION IF NOT EXISTS pg_trgm;

-- Insert additional data with edge cases
INSERT INTO test_table (text_field, int_field)
VALUES ('', 789);

-- Query using a Common Table Expression (CTE) and window function
WITH cte AS (
    SELECT id, text_field,
           ROW_NUMBER() OVER (ORDER BY id) as rn
    FROM test_table
)
SELECT * FROM cte WHERE rn % 2 = 0;

-- Test full-text search functionality
SELECT * FROM test_table
WHERE to_tsvector('english', text_field) @@ to_tsquery('test');

-- Test the custom function with a boolean result
SELECT check_value(-1), check_value(0), check_value(1);