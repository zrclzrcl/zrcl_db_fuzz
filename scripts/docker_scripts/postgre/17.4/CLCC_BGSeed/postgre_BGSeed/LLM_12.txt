-- 创建一个包含多种数据类型的表
CREATE TABLE test_table (
    id SERIAL PRIMARY KEY,
    name TEXT NOT NULL,
    age INTEGER CHECK (age >= 0),
    salary NUMERIC(10,2) DEFAULT 0.00,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    data JSONB,
    status ENUM('active', 'inactive', 'pending') DEFAULT 'active'
);

-- 插入测试数据
INSERT INTO test_table (name, age, salary, data)
VALUES 
    ('Alice', 30, 5000.00, '{"job": "Engineer", "department": "Tech"}'),
    ('Bob', 25, 4000.00, '{"job": "Developer", "department": "DevOps"}'),
    ('Charlie', NULL, 6000.00, '{"job": "Designer", "department": "UI/UX"}');

-- 更新操作
UPDATE test_table SET salary = salary * 1.1 WHERE age > 25;

-- 删除操作
DELETE FROM test_table WHERE name LIKE 'C%';

-- 复杂查询：使用窗口函数和CTE
WITH ranked_employees AS (
    SELECT 
        id, 
        name, 
        salary,
        RANK() OVER (ORDER BY salary DESC) as salary_rank
    FROM test_table
)
SELECT 
    name, 
    salary, 
    salary_rank,
    PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY salary) OVER () as median_salary
FROM ranked_employees;

-- 使用JSONB类型进行复杂查询
SELECT * FROM test_table 
WHERE data @> '{"job": "Engineer"}'::jsonb 
AND created_at > CURRENT_TIMESTAMP - INTERVAL '1 month';

-- 测试边界条件：空值和大数值
INSERT INTO test_table (name, age, salary)
VALUES ('NULL_Test', NULL, 999999.99);

-- 使用PostgreSQL特有的操作符和函数
SELECT 
    id,
    name,
    MD5(name) as name_hash,
    TO_CHAR(created_at, 'YYYY-MM-DD HH24:MI:SS') as formatted_time
FROM test_table
ORDER BY id DESC;