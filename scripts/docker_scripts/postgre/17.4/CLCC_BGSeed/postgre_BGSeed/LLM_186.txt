CREATE TABLE test_fuzz (
    id SERIAL PRIMARY KEY,
    text_col TEXT,
    numeric_col NUMERIC(10, 2),
    bool_col BOOLEAN,
    date_col DATE,
    time_col TIME,
    timestamp_col TIMESTAMP,
    interval_col INTERVAL,
    uuid_col UUID,
    jsonb_col JSONB,
    enum_col ENUM('option1', 'option2'),
    array_col INT[],
    unique_col VARCHAR(50) UNIQUE
);

INSERT INTO test_fuzz VALUES (
    DEFAULT, '', 0.00, FALSE, '1970-01-01', '00:00:00',
    '1970-01-01 00:00:00', INTERVAL '0 seconds', uuid_generate_v4(),
    jsonb_build_object('key', NULL), 'option1', ARRAY[]::INT[],
    'test_unique'
);

INSERT INTO test_fuzz VALUES (
    DEFAULT, REPEAT('x', 1024), 99999999.99, TRUE, '9999-12-31',
    '23:59:59', '9999-12-31 23:59:59', INTERVAL '1 year', uuid_generate_v4(),
    jsonb_build_object('nested', jsonb_build_object('key', 'value')), 'option2',
    ARRAY[1, NULL, 3], 'another_unique'
);

SELECT jsonb_pretty(jsonb_col) FROM test_fuzz;
SELECT array_agg(id) FROM test_fuzz GROUP BY text_col;
SELECT date_part('year', timestamp_col) FROM test_fuzz;

CREATE INDEX idx_gin ON test_fuzz USING GIN (jsonb_col);
ALTER TABLE test_fuzz ADD CONSTRAINT chk_numeric CHECK (numeric_col > 0);

INSERT INTO test_fuzz VALUES (
    DEFAULT, 'edge_case', NULL, NULL, NULL, NULL, NULL, NULL,
    uuid_generate_v4(), jsonb_build_object('null_value', NULL), NULL, NULL, NULL
);

SELECT * FROM test_fuzz WHERE text_col @@ to_tsquery('english', 'test');
SELECT lead(id) OVER (ORDER BY id) FROM test_fuzz;
WITH cte AS (SELECT * FROM test_fuzz LIMIT 1) SELECT * FROM cte;

CREATE TRIGGER trg_update BEFORE UPDATE ON test_fuzz
FOR EACH ROW EXECUTE FUNCTION trigger_function();

SELECT pg_sleep(0.1);