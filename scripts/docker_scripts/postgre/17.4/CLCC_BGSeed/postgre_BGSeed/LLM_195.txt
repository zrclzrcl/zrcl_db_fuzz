CREATE TABLE test_table (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    age INT CHECK (age >= 0),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO test_table(name, age) VALUES ('Alice', 30);
INSERT INTO test_table(name, age) VALUES ('Bob', 25);
INSERT INTO test_table(name, age) VALUES ('Charlie', 40);

BEGIN TRANSACTION ISOLATION LEVEL SERIALIZABLE;
    UPDATE test_table SET age = 31 WHERE name = 'Alice';
    SELECT * FROM test_table WHERE name = 'Alice';
PREPARE TRANSACTION 'tx1';

SELECT gid FROM pg_prepared_xacts;

COMMIT PREPARED 'tx1';

SAVEPOINT sp1;
    INSERT INTO test_table(name, age) VALUES ('David', 28);
ROLLBACK TO sp1;

BEGIN;
    DECLARE cur CURSOR FOR SELECT name, age FROM test_table ORDER BY age DESC;
    FETCH ALL IN cur;
CLOSE cur;

LOCK TABLE test_table IN ACCESS SHARE MODE NOWAIT;
SELECT * FROM test_table WHERE age > 30;

CREATE INDEX idx_age ON test_table(age);

WITH cte AS (
    SELECT name, age FROM test_table WHERE age >= 30
)
SELECT * FROM cte ORDER BY age DESC;

SELECT name,
       RANK() OVER (ORDER BY age DESC) as rank
FROM test_table;

SELECT pg_sleep(1); -- Testing timing-related functionality

DROP TABLE IF EXISTS test_table;