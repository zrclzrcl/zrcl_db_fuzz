CREATE TABLE test_fuzz (
    id SERIAL PRIMARY KEY,
    name VARCHAR(50),
    age INT,
    salary DECIMAL(10, 2),
    hire_date DATE,
    is_active BOOLEAN,
    metadata JSONB
);

INSERT INTO test_fuzz (name, age, salary, hire_date, is_active, metadata) VALUES 
('Alice', 30, 85000.00, '2023-01-15', true, '{"department": "Engineering", "role": "Developer"}'),
('Bob', 45, 95000.00, '2022-05-20', false, '{"department": "Sales", "role": "Manager"}'),
('Charlie', 28, 75000.00, '2023-10-01', true, '{"department": "Marketing", "role": "Analyst"}'),
('', -1, 0.00, '1970-01-01', null, '{}'),
('Eve', 50, 120000.00, '2020-03-14', true, '{"department": "Executives", "role": "CEO"}');

SELECT id, name, age FROM test_fuzz WHERE age > 30 AND is_active = true ORDER BY age DESC;
SELECT name, salary, hire_date FROM test_fuzz WHERE EXTRACT(YEAR FROM hire_date) >= 2023 ORDER BY hire_date;
SELECT department, COUNT(*) FROM test_fuzz WHERE metadata->>'department' IS NOT NULL GROUP BY department HAVING COUNT(*) > 1;

WITH ranked_employees AS (
    SELECT id, name, salary,
        ROW_NUMBER() OVER (ORDER BY salary DESC) as rank
    FROM test_fuzz
)
SELECT * FROM ranked_employees WHERE rank <= 3;

SELECT 
    name, 
    age, 
    CASE 
        WHEN salary > 100000 THEN 'High'
        WHEN salary > 75000 THEN 'Medium'
        ELSE 'Low'
    END AS salary_level
FROM test_fuzz;

SELECT COUNT(*) FROM test_fuzz WHERE metadata ? 'role' AND metadata->>'role' = 'Developer';

DROP TABLE test_fuzz;