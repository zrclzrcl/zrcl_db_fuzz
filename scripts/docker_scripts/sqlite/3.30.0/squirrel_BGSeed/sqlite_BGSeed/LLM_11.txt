-- 创建一个包含多种数据类型的表
CREATE TABLE test_table (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    value REAL CHECK(value > 0),
    data BLOB,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- 插入一些初始数据，包括NULL值和边界条件
INSERT INTO test_table (id, name, value, data)
VALUES 
(1, 'Test Name 1', 123.45, X'DEADBEEF'),
(2, NULL, 0.0, NULL),
(3, 'Boundary Test', 9223372036854775807, X'FF' || X'00');

-- 测试更新操作，包括NULL和复杂计算
UPDATE test_table SET value = value * RAND(), name = 'Updated Name' WHERE id = 1;

-- 测试删除操作，包含子查询
DELETE FROM test_table WHERE id IN (SELECT id FROM test_table WHERE value < 100);

-- 创建索引以测试性能和边界条件
CREATE INDEX idx_test_value ON test_table(value);
CREATE UNIQUE INDEX idx_test_name ON test_table(name) WHERE name IS NOT NULL;

-- 测试事务控制
BEGIN TRANSACTION;
    INSERT INTO test_table (name, value) VALUES ('Transaction Test', 456.78);
    SAVEPOINT sp1;
        UPDATE test_table SET value = value * 2 WHERE name = 'Transaction Test';
        ROLLBACK TO sp1;
COMMIT;

-- 复杂查询测试，包含多个JOIN和子查询
SELECT t1.id, t1.name, t2.value 
FROM test_table AS t1
JOIN (
    SELECT id, value FROM test_table WHERE value > 100
) AS t2 ON t1.id = t2.id;