PRAGMA page_size=512;
    CREATE TABLE t1(x);
    WITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM c WHERE x<10000)
    INSERT INTO t1(x) SELECT zeroblob(300) FROM c;
    CREATE TABLE t2(y);
    DROP TABLE t1;

EXPLAIN PRAGMA integrity_check

CREATE TABLE t1(a, b, c);
  ATTACH 'test.db2' AS aux;
  CREATE TABLE aux.t2(d, e, f);

PRAGMA table_info = t1

PRAGMA table_info = t2

PRAGMA table_info(t1)

PRAGMA table_info(t2)

CREATE TABLE t1(a, b, c);
  ATTACH 'test.db2' AS aux;
  CREATE TABLE aux.t2(d, e, f);

SELECT * FROM pragma_table_info('t1')

SELECT * FROM pragma_table_info('t2')

SELECT * FROM pragma_table_info('t1')

SELECT * FROM pragma_table_info('t2')

CREATE TABLE t1(a, b, c);
  CREATE INDEX i1 ON t1(b);
  ATTACH 'test.db2' AS aux;
  CREATE TABLE aux.t2(d, e, f);
  CREATE INDEX aux.i2 ON t2(e);

SELECT * FROM pragma_index_info('i1')

SELECT * FROM pragma_index_info('i2')

SELECT * FROM pragma_index_info('i1')

SELECT * FROM pragma_index_info('i2')

CREATE INDEX main.i1 ON t1(b, c);
  CREATE INDEX aux.i2 ON t2(e, f);

SELECT * FROM pragma_index_list('t1')

SELECT * FROM pragma_index_list('t2')

SELECT * FROM pragma_index_list('t1')

SELECT * FROM pragma_index_list('t2')

CREATE UNIQUE INDEX main.i1 ON t1(a);
  CREATE UNIQUE INDEX aux.i2 ON t2(d);
  CREATE TABLE main.c1 (a, b, c REFERENCES t1(a));
  CREATE TABLE aux.c2 (d, e, r REFERENCES t2(d));

SELECT * FROM pragma_foreign_key_list('c1')

SELECT * FROM pragma_foreign_key_list('c2')

SELECT * FROM pragma_foreign_key_list('c1')

SELECT * FROM pragma_foreign_key_list('c2')

CREATE TABLE main.c1 (a, b, c REFERENCES t1(a));
  CREATE TABLE aux.c2 (d, e, r REFERENCES t2(d));
  INSERT INTO main.c1 VALUES(1, 2, 3);
  INSERT INTO aux.c2 VALUES(4, 5, 6);

pragma foreign_key_check('c1')

pragma foreign_key_check('c2')

pragma foreign_key_check('c1')

CREATE TABLE t4(a DEFAULT 'abc' /* comment */, b DEFAULT -1 -- comment
     , c DEFAULT +4.0 /* another comment */
  );
  PRAGMA table_info = t4;

DROP TABLE IF EXISTS t1;
    DROP TABLE IF EXISTS t2;
    CREATE TABLE t1(a INT PRIMARY KEY, b INT);
    CREATE TABLE t2(c INT PRIMARY KEY, d INT REFERENCES t1);
    SELECT t.name, f."table", f."from", i.name, i.pk
      FROM pragma_table_list() AS t
           JOIN pragma_foreign_key_list(t.name, t.schema) AS f
           JOIN pragma_table_info(f."table", t.schema) AS i
     WHERE i.pk;

CREATE VIEW v1 AS SELECT abs(a) FROM t1;
    PRAGMA writable_schema=ON;
    UPDATE sqlite_schema
       SET sql=replace(sql,'abs(a)','nosuchfunc(a)')
     WHERE name='v1';
    PRAGMA writable_schema=RESET;

PRAGMA table_list;

CREATE TABLE t3 ("a" TEXT, "b" TEXT);
    CREATE TABLE t4 ("a" TEXT, "b" TEXT, "c" TEXT);

CREATE TABLE pragma_t3 AS SELECT * FROM pragma_table_info('t3');
    CREATE TABLE pragma_t4 AS SELECT * FROM pragma_table_info('t4');

SELECT pragma_t4.name, pragma_t3.name 
      FROM pragma_t4 RIGHT JOIN pragma_t3 ON (pragma_t4.name=pragma_t3.name);

SELECT t4.name, t3.name 
    FROM pragma_table_info('t4') t4 
    RIGHT JOIN pragma_table_info('t3') t3 ON (t4.name=t3.name);